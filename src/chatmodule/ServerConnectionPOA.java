package chatmodule;


/**
* chatmodule/ServerConnectionPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from chat.idl
* lundi 25 janvier 2016 22 h 27 CET
*/

public abstract class ServerConnectionPOA extends org.omg.PortableServer.Servant
 implements chatmodule.ServerConnectionOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_client", new java.lang.Integer (0));
    _methods.put ("_set_client", new java.lang.Integer (1));
    _methods.put ("connect", new java.lang.Integer (2));
    _methods.put ("disconnect", new java.lang.Integer (3));
    _methods.put ("getClient", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // chatmodule/ServerConnection/_get_client
       {
         String $result[] = null;
         $result = this.client ();
         out = $rh.createReply();
         chatmodule.ClientsHelper.write (out, $result);
         break;
       }

       case 1:  // chatmodule/ServerConnection/_set_client
       {
         String newClient[] = chatmodule.ClientsHelper.read (in);
         this.client (newClient);
         out = $rh.createReply();
         break;
       }

       case 2:  // chatmodule/ServerConnection/connect
       {
         String nickname = in.read_string ();
         chatmodule.ClientConnection cnx = chatmodule.ClientConnectionHelper.read (in);
         chatmodule.ClientManager mgr = chatmodule.ClientManagerHelper.read (in);
         this.connect (nickname, cnx, mgr);
         out = $rh.createReply();
         break;
       }

       case 3:  // chatmodule/ServerConnection/disconnect
       {
         String nickname = in.read_string ();
         this.disconnect (nickname);
         out = $rh.createReply();
         break;
       }

       case 4:  // chatmodule/ServerConnection/getClient
       {
         String nickname = in.read_string ();
         chatmodule.ClientConnection $result = null;
         $result = this.getClient (nickname);
         out = $rh.createReply();
         chatmodule.ClientConnectionHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:chatmodule/ServerConnection:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ServerConnection _this() 
  {
    return ServerConnectionHelper.narrow(
    super._this_object());
  }

  public ServerConnection _this(org.omg.CORBA.ORB orb) 
  {
    return ServerConnectionHelper.narrow(
    super._this_object(orb));
  }


} // class ServerConnectionPOA
